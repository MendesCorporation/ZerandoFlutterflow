// Automatic FlutterFlow imports
import '/backend/supabase/supabase.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/custom_code/widgets/index.dart'; // Imports other custom widgets
import '/custom_code/actions/index.dart'; // Imports custom actions
import '/flutter_flow/custom_functions.dart'; // Imports custom functions
import 'package:flutter/material.dart';
// Begin custom widget code
// DO NOT REMOVE OR MODIFY THE CODE ABOVE!

import 'dart:async';
import 'dart:io';
import 'package:receive_sharing_intent/receive_sharing_intent.dart';

class ReceiveShare extends StatefulWidget {
  const ReceiveShare({
    super.key,
    this.width,
    this.height,
  });

  final double? width;
  final double? height;

  @override
  State<ReceiveShare> createState() => _ReceiveShareState();
}

class _ReceiveShareState extends State<ReceiveShare> {
  late StreamSubscription _intentSub;
  final List<SharedMediaFile> _sharedFiles = [];

  @override
  void initState() {
    super.initState();

    // Escuta compartilhamento de mídia enquanto o app está em execução
    _intentSub = ReceiveSharingIntent.instance.getMediaStream().listen((value) {
      setState(() {
        _sharedFiles.clear();
        _sharedFiles.addAll(value);
      });
      // Opcional: print para debug
      print(_sharedFiles.map((f) => f.toMap()));
    }, onError: (err) {
      print("Erro no getMediaStream: $err");
    });

    // Recebe compartilhamento de mídia quando o app é iniciado a partir do share intent
    ReceiveSharingIntent.instance.getInitialMedia().then((value) {
      setState(() {
        _sharedFiles.clear();
        _sharedFiles.addAll(value);
      });
      // Indica que o processamento do intent foi concluído
      ReceiveSharingIntent.instance.reset();
      // Opcional: print para debug
      print(_sharedFiles.map((f) => f.toMap()));
    });
  }

  @override
  void dispose() {
    _intentSub.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      width: widget.width,
      height: widget.height,
      child: _sharedFiles.isEmpty
          ? Center(
              child: Text(
                "Nenhuma imagem compartilhada.",
                style: FlutterFlowTheme.of(context).bodyText1,
              ),
            )
          : ListView.builder(
              itemCount: _sharedFiles.length,
              itemBuilder: (context, index) {
                final sharedFile = _sharedFiles[index];
                return Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: Image.file(
                    File(sharedFile.path),
                    errorBuilder: (context, error, stackTrace) {
                      return const Text("Erro ao carregar imagem.");
                    },
                  ),
                );
              },
            ),
    );
  }
}
